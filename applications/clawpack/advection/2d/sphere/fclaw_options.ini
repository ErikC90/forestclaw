[user]
     example = 0          # 1 = pillowsphere;  2 = cubed_sphere
     revs-per-second = 0.5          # Rigid body rotation
     claw-version = 4

[clawpatch]
     # Grid dimensions
     mx = 8               # mx_leaf
     my = 8               # my_leaf
     mbc = 2              # Number of ghost cells

     maux = 3             # Auxilliary arrays (needed by Clawpack solvers)

     # Equations and boundary conditions
     meqn = 1             # Number of equations


[Options]

     # Regridding
     minlevel = 0             # Minimum level
     maxlevel = 5             # Maximum levels of refinement
     regrid_interval = 1      # Regrid every 'regrid_interval' time steps.
     refine_threshold = 0.25
     coarsen_threshold = 0.05
     smooth-refine = T
     smooth-level = 4

# Time stepping
     tfinal = 4.0         #

     outstyle = 1             # OutputStyle = 1,2,3 (see below, e.g. [OutputStyle_1]
     nout = 16                 # Used for all three out styles;  has different meaning, though.
     nstep = 1                # Only used if outstyle is 3

     use_fixed_dt = F         # Take a fixed time step
     initial_dt = 0.015625    # Initial time step for 'minlevel'
     max_cfl = 1.0            # maximum cfl
     desired_cfl = 0.9        # desired cfl

     subcycle = T             # subcycle in time ( = T or F).

# Output     
     verbosity = essential    # verbose
     output = T            # Set this to F for parallel runs.  T is dead slow.

# Diagnostics and debugging
     trapfpe = T              # Trap floating point exceptions
     mpi_debug = F
     conservation-check = F
     run-user-diagnostics = F
     compute-error = F

# Mapping
     manifold = T         # Manifold

     theta = -30          # Rotation angles (degrees)
     phi = -50            # Rotation angle

     scale = 1 1 1
     shift = 0 0 0

[clawpack46]
     order  = 2 2         # normal and transverse order
     mcapa = 1            # mcapa
     maux = 3             # maux
     src_term = 0         # src_term

     mwaves = 1           # mwaves
     mthlim = 4           # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1      # mthbc(1) (left edge), etc.

     # output
     ascii-out = T
     vtk-out = F


[clawpack5]
     order  = 2 2         # normal and transverse order
     mcapa = 1            # mcapa
     maux = 3             # maux
     src_term = 0         # src_term

     mwaves = 1           # mwaves
     mthlim = 4           # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1      # mthbc(1) (left edge), etc.

     # output
     ascii-out = T
     vtk-out = F


